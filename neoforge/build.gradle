import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
    id 'net.darkhax.curseforgegradle' version '1.+'
    id 'com.modrinth.minotaur' version '2.+'
}

base {
    archivesName = "${mod_id}-${project.name}-${neoforge_supported_versions}"
}

neoForge {
    version = neoforge_version

    parchment {
        minecraftVersion = parchment_mc
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric
        }
        client {
            client()
        }
        data {
            data()
            programArguments.addAll(
                    "--mod", mod_id,
                    "--all",
                    "--output", file("src/generated/resources/").absolutePath,
                    "--existing", file("src/main/resources/").absolutePath,
                    "--existing", file("${rootProject.project('common').projectDir}/src/main/resources/").absolutePath
            )
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

sourceSets.main.resources { srcDirs = ['src/main/resources', 'src/generated/resources'] }

dependencies {
    // CATALOGUE
    if (project.hasProperty('catalogue_version')) {
        runtimeOnly "curse.maven:catalogue-459701:${catalogue_version}"
    }
}

tasks.register('publishCurseForge', TaskPublishCurseForge) {
    apiToken = file('../../API Tokens/lowercasecommands.md')
    def projectId = "${cf_id}".toString()
    def mainFile = upload(projectId, file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")) as Object
    mainFile.changelogType = 'markdown'
    mainFile.changelog = file('changelog.md')
    mainFile.addGameVersion('Client', 'Server')
    mainFile.releaseType = "${release_type}"
    "${neoforge_release_versions}".split(',').each {
        mainFile.addGameVersion("${it}")
    }
    mainFile.addModLoader('NeoForge')
}

modrinth {
    def tokenText = file('../../API Tokens/modrinth.md')
    if (tokenText.exists()) {
        token = tokenText.text
    } else {
        token = ""
    }
    projectId = modrinth_id
    versionType = release_type
    changelog = file('changelog.md').text
    gameVersions = neoforge_release_versions.split(",") as List<String>
    loaders.add(project.name)
    detectLoaders = false
    versionName = "${archivesBaseName}-${version}"
    uploadFile = layout.buildDirectory.file("libs/${archivesBaseName}-${version}.jar").get().asFile
}